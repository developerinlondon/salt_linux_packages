{% set elastic_search = pillar['logstash']['elastic_search_server'] -%}
# logstash confs have three parts:
# log 1) input 2) filter 3) output
# http://logstash.net/docs/1.1.9/configuration 
input {
  tcp {
    port => 5574
    type => "nginx_default"
  }
  udp {
    port => 5574
    type => "nginx_default"
  }
}

# nginx default message parsing
filter{
  # turns our syslog goup into some fields, of which timestamp is worthless, and clean message field
  grok {
      type => "nginx_default"
      pattern => [ "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" ]
      #add_field => [ "received_at", "%{@timestamp}" ] # wrong
      add_field => [ "received_from", "%{@source_host}" ]
  }

  mutate {
      type => "nginx_default"
      exclude_tags => "_grokparsefailure"
      replace => [ "@source_host", "%{syslog_hostname}" ]
      replace => [ "@message", "%{syslog_message}" ]
  }

  # does prioritiy even do anything useful?  has dep warning in logstash.log
  #syslog_pri {
  #    type => "syslog"
  #}

  # tag the messages based on syslog_program
  grep {
      type => "nginx_default"
      match => ["syslog_program", "nginx_access"]
      add_tag => ["nginx_custom"]
      exclude_tags => "_grokparsefailure"
      drop => false
  }     

  #custom
  grok {
      type => "nginx_default"
      exclude_tags => "_grokparsefailure"
      tags => ["nginx_custom"]
      pattern => ["%{IPORHOST:remote_addr} - %{NOTSPACE:remote_user} - %{NOTSPACE:http_forwarded_for} \[%{HTTPDATE:time_local}\]%{SPACE}\"(?<request>.*?)\" %{INT:status} %{INT:body_bytes_sent} \"(?<http_referrer>.*?)\" \"(?<user_agent>.*?)\""]
  }

  #non-custom, exclude all custom tags
  #log_format combined '$remote_addr - $remote_user [$time_local]  '
  #                    '"$request" $status $body_bytes_sent '
  #                    '"$http_referer" "$http_user_agent"';
  grok {
      type => "nginx_default"
      exclude_tags => ["_grokparsefailure", "nginx_custom"]
      pattern => ["%{IPORHOST:remote_addr} - %{NOTSPACE:remote_user} \[%{HTTPDATE:time_local}\]%{SPACE}\"(?<request>.*?)\" %{INT:status} %{INT:body_bytes_sent} \"(?<http_referrer>.*?)\" \"(?<user_agent>.*?)\""]
  }


  # the date rsyslog decided to check the file is not the timestamp
  date {
    type => "nginx_default"
    locale => "en"
    exclude_tags => "_grokparsefailure"
    match => [ "time_local" , "dd/MMM/YYYY:HH:mm:ss Z" ]
  }

  # done with some fields and change message to something easy to read
  mutate {
      type => "nginx_default"
      exclude_tags => "_grokparsefailure"
      remove => [ "syslog_hostname", "syslog_message", "syslog_timestamp", "time_local"]
      replace => [ "@message", "%{status} %{request} %{http_referrer}" ]
  }  
}
output {
  elasticsearch {
    index => "syslog-%{+YYYY.MM.dd}"
    #run with elastic search in the same process or not
    embedded => false
    host => "{{elastic_search}}"
    type => "nginx_default"
  }
  # for debugging
  #stdout { debug => true debug_format => json }
}
