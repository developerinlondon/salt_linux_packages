{% set elastic_search = pillar['logstash']['elastic_search_server'] -%}
# logstash confs have three parts:
# log 1) input 2) filter 3) output
# http://logstash.net/docs/1.1.9/configuration 
input {
  tcp {
    port => 5564
    type => "mysqlslowquery"
  }
  udp {
    port => 5564
    type => "mysqlslowquery"
  }
}

# mysql slow query log parsing
filter{
  # first grok/mutate gets rsyslog information out
  grok {
      type => "mysqlslowquery"
      pattern => [ "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" ]
      #add_field => [ "received_at", "%{@timestamp}" ] # wrong
      add_field => [ "received_from", "%{@source_host}" ]
  }
  mutate {
      type => "mysqlslowquery"
      exclude_tags => "_grokparsefailure"
      replace => [ "@source_host", "%{syslog_hostname}" ]
      replace => [ "@message", "%{syslog_message}" ]
  }

  # combine individual lines into messages
  multiline {
    type => "mysqlslowquery"
    what => "previous"
    pattern => " # Time:"
    negate => true
  }

  # grab fields if the multiline worked okay
  grok { 
    type => "mysqlslowquery"
    tags => ["multiline"]
    patterns_dir => ["/etc/logstash/patterns/"]
    pattern => ["(?m)%{MYSQLQUERYSCHEMA}(.*)?%{MYSQLQUERYEXECTIME}(.*)?%{MYSQLQUERY}"]
  }

  # change query_time to a float field
  mutate{
    type => "mysqlslowquery"
    exclude_tags => "_grokparsefailure"    
    convert => ["query_time", "float"]
  }

  # the date rsyslog decided to check the file is not the timestamp
  date {
    type => "mysqlslowquery"
    exclude_tags => "_grokparsefailure"
    match => ["unixtime", "UNIX"]
    add_tag => ["dated"]
  }

  # get rid of date cruft 
  mutate{
    type => "mysqlslowquery"
    tags => ["dated"]
    remove => ["unixtime"]
    remove_tag => ["dated"]
  }

  # message is what shows up in kibana, so put the query there
  mutate {
    type => "mysqlslowquery"
    exclude_tags => "_grokparsefailure"
    replace => ["@message", "%{query}"]
    remove => ["query"]
    remove_tag => ["multiline"]
  }
  
}
output {
  elasticsearch {
    index => "syslog-%{+YYYY.MM.dd}"
    #run with elastic search in the same process or not
    embedded => false
    host => "{{elastic_search}}"
    type => "mysqlslowquery"
  }
  # for debugging
  #stdout { debug => true debug_format => json }
}
